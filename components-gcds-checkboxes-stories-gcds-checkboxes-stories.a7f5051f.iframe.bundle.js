"use strict";(self.webpackChunk_cdssnc_gcds_components=self.webpackChunk_cdssnc_gcds_components||[]).push([[3859],{"./src/components/gcds-checkboxes/stories/gcds-checkboxes.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultGroup:()=>DefaultGroup,DefaultSingle:()=>DefaultSingle,DisabledGroup:()=>DisabledGroup,DisabledSingle:()=>DisabledSingle,ErrorGroup:()=>ErrorGroup,ErrorSingle:()=>ErrorSingle,HintGroup:()=>HintGroup,HintSingle:()=>HintSingle,Playground:()=>Playground,Props:()=>Props,RequiredGroup:()=>RequiredGroup,RequiredSingle:()=>RequiredSingle,ValueGroup:()=>ValueGroup,ValueSingle:()=>ValueSingle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/utils/storybook/component-properties.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Checkboxes",parameters:{actions:{argTypesRegex:"^gcds.*",handles:["change","focus","blur"]}},argTypes:{name:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},disabled:{control:{type:"select"},options:[!1,!0],table:{type:{summary:"boolean"},defaultValue:{summary:!1}}},errorMessage:{name:"error-message",control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},hint:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},legend:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},options:{control:"text",table:{type:{summary:"\n        {\n          id: string;\n          label: string;\n          value?: string;\n          hint?: string;\n          checked?: boolean;\n        }\n        string | object[]"},defaultValue:{summary:"-"}},type:{required:!0}},required:{control:{type:"select"},options:[!1,!0],table:{type:{summary:"boolean"},defaultValue:{summary:!1}}},value:{control:"text",table:{type:{summary:"string | Array<string>"},defaultValue:{summary:"[]"}}},..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.fd,..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.qK,gcdsInput:{action:"input",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in},gcdsChange:{action:"change",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in},gcdsFocus:{action:"focus",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in},gcdsBlur:{action:"blur",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in},gcdsError:{action:"invalid",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in},gcdsValid:{action:"valid",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in}}},Template=args=>`\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend?`legend="${args.legend}"`:null}\n  options='${args.options}'\n  ${args.hint?`hint="${args.hint}"`:null}\n  ${args.errorMessage?`error-message="${args.errorMessage}"`:null}\n  ${args.required?"required":null}\n  ${args.disabled?"disabled":null}\n  ${args.value?`value='${args.value}'`:null}\n  ${"blur"!=args.validateOn?`validate-on="${args.validateOn}"`:null}\n  ${"en"!=args.lang?`lang="${args.lang}"`:null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options='${args.options}'\n  ${args.hint?`hint="${args.hint}"`:null}\n  ${args.errorMessage?`errorMessage="${args.errorMessage}"`:null}\n  ${args.required?"required":null}\n  ${args.disabled?"disabled":null}\n  ${args.value?`value='${args.value}'`:null}\n  ${"blur"!=args.validateOn?`validateOn="${args.validateOn}"`:null}\n  ${"en"!=args.lang?`lang="${args.lang}"`:null}\n>\n</GcdsCheckboxes>\n`.replace(/\s\snull\n/g,""),DefaultGroup=Template.bind({});DefaultGroup.args={legend:"Legend",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"},\n    { "label": "Label for checkbox 2", "id": "checkbox2", "value": "checkbox2"}\n  ]',hint:"",errorMessage:"",required:!1,disabled:!1,value:"",validateOn:"blur",lang:"en"};const DefaultSingle=Template.bind({});DefaultSingle.args={legend:"",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"}\n  ]',hint:"",errorMessage:"",required:!1,disabled:!1,value:"",validateOn:"blur",lang:"en"};const HintGroup=Template.bind({});HintGroup.args={legend:"Legend",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"},\n    { "label": "Label for checkbox 2", "id": "checkbox2", "value": "checkbox2"}\n  ]',hint:"Description or example to make the option clearer.",errorMessage:"",required:!1,disabled:!1,value:"",validateOn:"blur",lang:"en"};const HintSingle=Template.bind({});HintSingle.args={legend:"",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"}\n  ]',hint:"Description or example to make the option clearer.",errorMessage:"",required:!1,disabled:!1,value:"",validateOn:"blur",lang:"en"};const RequiredGroup=Template.bind({});RequiredGroup.args={legend:"Legend",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"},\n    { "label": "Label for checkbox 2", "id": "checkbox2", "value": "checkbox2"}\n  ]',hint:"",errorMessage:"",required:!0,disabled:!1,value:"",validateOn:"blur",lang:"en"};const RequiredSingle=Template.bind({});RequiredSingle.args={legend:"",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"}\n  ]',hint:"",errorMessage:"",required:!0,disabled:!1,value:"",validateOn:"blur",lang:"en"};const DisabledGroup=Template.bind({});DisabledGroup.args={legend:"Legend",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"},\n    { "label": "Label for checkbox 2", "id": "checkbox2", "value": "checkbox2"}\n  ]',hint:"",errorMessage:"",required:!1,disabled:!0,value:"",validateOn:"blur",lang:"en"};const DisabledSingle=Template.bind({});DisabledSingle.args={legend:"",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"}\n  ]',hint:"",errorMessage:"",required:!1,disabled:!0,value:"",validateOn:"blur",lang:"en"};const ErrorGroup=Template.bind({});ErrorGroup.args={legend:"Legend",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"},\n    { "label": "Label for checkbox 2", "id": "checkbox2", "value": "checkbox2"}\n  ]',hint:"",errorMessage:"Choose an option to continue.",required:!1,disabled:!1,value:"",validateOn:"blur",lang:"en"};const ErrorSingle=Template.bind({});ErrorSingle.args={legend:"",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"}\n  ]',hint:"",errorMessage:"You must check the box to continue.",required:!1,disabled:!1,value:"",validateOn:"blur",lang:"en"};const ValueGroup=Template.bind({});ValueGroup.args={legend:"Legend",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"},\n    { "label": "Label for checkbox 2", "id": "checkbox2", "value": "checkbox2"}\n  ]',hint:"",errorMessage:"",required:!1,disabled:!1,value:'["checkbox2"]',validateOn:"blur",lang:"en"};const ValueSingle=Template.bind({});ValueSingle.args={legend:"",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"}\n  ]',hint:"",errorMessage:"",required:!1,disabled:!1,value:'["checkbox1"]',validateOn:"blur",lang:"en"};const Props=Template.bind({});Props.args={legend:"Legend",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"},\n    { "label": "Label for checkbox 2", "id": "checkbox2", "value": "checkbox2"}\n  ]',hint:"",errorMessage:"",required:!1,disabled:!1,value:"",validateOn:"blur",lang:"en"};const Playground=(args=>`\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options='${args.options}'\n  ${args.hint?`hint="${args.hint}"`:null}\n  ${args.errorMessage?`error-message="${args.errorMessage}"`:null}\n  ${args.required?"required":null}\n  ${args.disabled?"disabled":null}\n  ${args.value?`value='${args.value}'`:null}\n  ${"blur"!=args.validateOn?`validate-on="${args.validateOn}"`:null}\n  ${"en"!=args.lang?`lang="${args.lang}"`:null}\n>\n</gcds-checkboxes>\n`.replace(/\s\snull\n/g,"")).bind({});Playground.args={legend:"Legend",name:"checkbox",options:'[\n    { "label": "Label for checkbox 1", "id": "checkbox1", "value": "checkbox1"},\n    { "label": "Label for checkbox 2", "id": "checkbox2", "value": "checkbox2"}\n  ]',hint:"",errorMessage:"",required:!1,disabled:!1,value:"",validateOn:"blur",lang:"en"},DefaultGroup.parameters={...DefaultGroup.parameters,docs:{...DefaultGroup.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...DefaultGroup.parameters?.docs?.source}}},DefaultSingle.parameters={...DefaultSingle.parameters,docs:{...DefaultSingle.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...DefaultSingle.parameters?.docs?.source}}},HintGroup.parameters={...HintGroup.parameters,docs:{...HintGroup.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...HintGroup.parameters?.docs?.source}}},HintSingle.parameters={...HintSingle.parameters,docs:{...HintSingle.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...HintSingle.parameters?.docs?.source}}},RequiredGroup.parameters={...RequiredGroup.parameters,docs:{...RequiredGroup.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...RequiredGroup.parameters?.docs?.source}}},RequiredSingle.parameters={...RequiredSingle.parameters,docs:{...RequiredSingle.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...RequiredSingle.parameters?.docs?.source}}},DisabledGroup.parameters={...DisabledGroup.parameters,docs:{...DisabledGroup.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...DisabledGroup.parameters?.docs?.source}}},DisabledSingle.parameters={...DisabledSingle.parameters,docs:{...DisabledSingle.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...DisabledSingle.parameters?.docs?.source}}},ErrorGroup.parameters={...ErrorGroup.parameters,docs:{...ErrorGroup.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...ErrorGroup.parameters?.docs?.source}}},ErrorSingle.parameters={...ErrorSingle.parameters,docs:{...ErrorSingle.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...ErrorSingle.parameters?.docs?.source}}},ValueGroup.parameters={...ValueGroup.parameters,docs:{...ValueGroup.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...ValueGroup.parameters?.docs?.source}}},ValueSingle.parameters={...ValueSingle.parameters,docs:{...ValueSingle.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...ValueSingle.parameters?.docs?.source}}},Props.parameters={...Props.parameters,docs:{...Props.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  ${args.legend ? `legend="${args.legend}"` : null}\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n\n\x3c!-- React code --\x3e\n<GcdsCheckboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsCheckboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...Props.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-checkboxes\n  name="${args.name}"\n  legend="${args.legend}"\n  options=\'${args.options}\'\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.value ? `value=\'${args.value}\'` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-checkboxes>\n`.replace(/\\s\\snull\\n/g, \'\')',...Playground.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultGroup","DefaultSingle","HintGroup","HintSingle","RequiredGroup","RequiredSingle","DisabledGroup","DisabledSingle","ErrorGroup","ErrorSingle","ValueGroup","ValueSingle","Props","Playground"]},"./src/utils/storybook/component-properties.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{fd:()=>validatorProps,in:()=>eventProp,qK:()=>langProp});const langProp={lang:{control:{type:"select"},options:["en","fr"],table:{type:{summary:"string"},defaultValue:{summary:"en"}}}},validatorProps={validateOn:{name:"validate-on",control:{type:"select"},options:["blur","other"],table:{type:{summary:"string"},defaultValue:{summary:"blur"}}}},eventProp={control:{type:{}},table:{category:"Events | Événements"}}}}]);