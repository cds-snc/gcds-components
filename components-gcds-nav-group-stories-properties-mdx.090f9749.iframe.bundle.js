/*! For license information please see components-gcds-nav-group-stories-properties-mdx.090f9749.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_cdssnc_gcds_components=self.webpackChunk_cdssnc_gcds_components||[]).push([[379,6241],{"../../node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/gcds-nav-group/stories/properties.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_home_runner_work_gcds_components_gcds_components_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs"),_gcds_nav_group_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/gcds-nav-group/stories/gcds-nav-group.stories.tsx");function _createMdxContent(props){const _components={h1:"h1",...(0,_home_runner_work_gcds_components_gcds_components_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.W8,{of:_gcds_nav_group_stories__WEBPACK_IMPORTED_MODULE_2__,name:"Events & properties"}),"\n",!new URLSearchParams(window.location.search).get("demo")&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{children:"Events & properties"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.Hl,{of:_gcds_nav_group_stories__WEBPACK_IMPORTED_MODULE_2__.Props,story:{inline:!0},sourceState:"shown",type:"dynamic"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.H2,{of:_gcds_nav_group_stories__WEBPACK_IMPORTED_MODULE_2__.Props,sort:"requiredFirst"})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,_home_runner_work_gcds_components_gcds_components_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./src/components/gcds-nav-group/stories/gcds-nav-group.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Menu:()=>Menu,Open:()=>Open,Playground:()=>Playground,Props:()=>Props,TopNav:()=>TopNav,Triggers:()=>Triggers,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/utils/storybook/component-properties.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Navigation group",argTypes:{menuLabel:{name:"menu-label",control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},openTrigger:{name:"open-trigger",control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},closeTrigger:{name:"close-trigger",control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},open:{name:"open",control:{type:"select"},options:[!1,!0],table:{type:{summary:"boolean"},defaultValue:{summary:!1}}},..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.qK,default:{control:{type:"text"},description:"Customize the content or include additional elements. | Personnalisez le contenu ou ajoutez des éléments supplémentaires.",table:{category:"Slots | Fentes"}},gcdsClick:{action:"click",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in},gcdsFocus:{action:"focus",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in},gcdsBlur:{action:"blur",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in}}},Template=args=>`\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-nav-group\n  menu-label="${args.menuLabel}"\n  open-trigger="${args.openTrigger}"\n  ${args.closeTrigger?`close-trigger="${args.closeTrigger}"`:null}\n  ${args.open?"open":null}\n  ${"en"!=args.lang?`lang="${args.lang}"`:null}\n>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n</gcds-nav-group>\n\n\x3c!-- React code --\x3e\n<GcdsNavGroup\n  menuLabel="${args.menuLabel}"\n  openTrigger="${args.openTrigger}"\n  ${args.closeTrigger?`closeTrigger="${args.closeTrigger}"`:null}\n  ${args.open?"open":null}\n  ${"en"!=args.lang?`lang="${args.lang}"`:null}\n>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n</GcdsNavGroup>\n`.replace(/\s\snull\n/g,""),Default=Template.bind({});Default.args={menuLabel:"Sub-menu",openTrigger:"Navigation group",closeTrigger:"",open:!1,lang:"en"};const Open=Template.bind({});Open.args={menuLabel:"Open sub-menu",openTrigger:"Navigation group",closeTrigger:"",open:!0,lang:"en"};const Triggers=Template.bind({});Triggers.args={menuLabel:"Triggers sub-menu",openTrigger:"Open the nav group",closeTrigger:"Close the nav group",open:!1,lang:"en"};const Menu=Template.bind({});Menu.args={menuLabel:"Sub-menu",openTrigger:"Navigation group",closeTrigger:"",open:!1,lang:"en"};const TopNav=(args=>`\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-top-nav label="Top nav example" alignment="right">\n  <gcds-nav-group\n    menu-label="${args.menuLabel}"\n    open-trigger="${args.openTrigger}"\n    ${args.closeTrigger?`close-trigger="${args.closeTrigger}"`:null}\n    ${args.open?"open":null}\n    ${"en"!=args.lang?`lang="${args.lang}"`:null}\n  >\n    <gcds-nav-link href="#">Nav link</gcds-nav-link>\n    <gcds-nav-link href="#">Nav link</gcds-nav-link>\n    <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  </gcds-nav-group>\n</gcds-top-nav>\n\n\x3c!-- React code --\x3e\n<GcdsTopNav label="Top nav example" alignment="right">\n  <GcdsNavGroup\n    menuLabel="${args.menuLabel}"\n    openTrigger="${args.openTrigger}"\n    ${args.closeTrigger?`closeTrigger="${args.closeTrigger}"`:null}\n    ${args.open?"open":null}\n    ${"en"!=args.lang?`lang="${args.lang}"`:null}\n  >\n    <GcdsNavLink href="#">Nav link</GcdsNavLink>\n    <GcdsNavLink href="#">Nav link</GcdsNavLink>\n    <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  </GcdsNavGroup>\n</GcdsTopNav>\n`.replace(/\s\snull\n/g,"")).bind({});TopNav.args={menuLabel:"Topnav sub-menu",openTrigger:"Navigation group",closeTrigger:"",open:!1,lang:"en"};const Props=Template.bind({});Props.args={menuLabel:"Sub-menu",openTrigger:"Navigation group",closeTrigger:"",open:!1,lang:"en"};const Playground=(args=>`\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-nav-group\n  menu-label="${args.menuLabel}"\n  open-trigger="${args.openTrigger}"\n  ${args.closeTrigger?`close-trigger="${args.closeTrigger}"`:null}\n  ${args.open?"open":null}\n  ${"en"!=args.lang?`lang="${args.lang}"`:null}\n>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n</gcds-nav-group>\n`.replace(/\s\snull\n/g,"")).bind({});Playground.args={menuLabel:"",openTrigger:"Navigation group",closeTrigger:"",open:!1,lang:"en"},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-nav-group\n  menu-label="${args.menuLabel}"\n  open-trigger="${args.openTrigger}"\n  ${args.closeTrigger ? `close-trigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n</gcds-nav-group>\n\n\x3c!-- React code --\x3e\n<GcdsNavGroup\n  menuLabel="${args.menuLabel}"\n  openTrigger="${args.openTrigger}"\n  ${args.closeTrigger ? `closeTrigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n</GcdsNavGroup>\n`.replace(/\\s\\snull\\n/g, \'\')',...Default.parameters?.docs?.source}}},Open.parameters={...Open.parameters,docs:{...Open.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-nav-group\n  menu-label="${args.menuLabel}"\n  open-trigger="${args.openTrigger}"\n  ${args.closeTrigger ? `close-trigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n</gcds-nav-group>\n\n\x3c!-- React code --\x3e\n<GcdsNavGroup\n  menuLabel="${args.menuLabel}"\n  openTrigger="${args.openTrigger}"\n  ${args.closeTrigger ? `closeTrigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n</GcdsNavGroup>\n`.replace(/\\s\\snull\\n/g, \'\')',...Open.parameters?.docs?.source}}},Triggers.parameters={...Triggers.parameters,docs:{...Triggers.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-nav-group\n  menu-label="${args.menuLabel}"\n  open-trigger="${args.openTrigger}"\n  ${args.closeTrigger ? `close-trigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n</gcds-nav-group>\n\n\x3c!-- React code --\x3e\n<GcdsNavGroup\n  menuLabel="${args.menuLabel}"\n  openTrigger="${args.openTrigger}"\n  ${args.closeTrigger ? `closeTrigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n</GcdsNavGroup>\n`.replace(/\\s\\snull\\n/g, \'\')',...Triggers.parameters?.docs?.source}}},Menu.parameters={...Menu.parameters,docs:{...Menu.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-nav-group\n  menu-label="${args.menuLabel}"\n  open-trigger="${args.openTrigger}"\n  ${args.closeTrigger ? `close-trigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n</gcds-nav-group>\n\n\x3c!-- React code --\x3e\n<GcdsNavGroup\n  menuLabel="${args.menuLabel}"\n  openTrigger="${args.openTrigger}"\n  ${args.closeTrigger ? `closeTrigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n</GcdsNavGroup>\n`.replace(/\\s\\snull\\n/g, \'\')',...Menu.parameters?.docs?.source}}},TopNav.parameters={...TopNav.parameters,docs:{...TopNav.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-top-nav label="Top nav example" alignment="right">\n  <gcds-nav-group\n    menu-label="${args.menuLabel}"\n    open-trigger="${args.openTrigger}"\n    ${args.closeTrigger ? `close-trigger="${args.closeTrigger}"` : null}\n    ${args.open ? `open` : null}\n    ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n  >\n    <gcds-nav-link href="#">Nav link</gcds-nav-link>\n    <gcds-nav-link href="#">Nav link</gcds-nav-link>\n    <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  </gcds-nav-group>\n</gcds-top-nav>\n\n\x3c!-- React code --\x3e\n<GcdsTopNav label="Top nav example" alignment="right">\n  <GcdsNavGroup\n    menuLabel="${args.menuLabel}"\n    openTrigger="${args.openTrigger}"\n    ${args.closeTrigger ? `closeTrigger="${args.closeTrigger}"` : null}\n    ${args.open ? `open` : null}\n    ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n  >\n    <GcdsNavLink href="#">Nav link</GcdsNavLink>\n    <GcdsNavLink href="#">Nav link</GcdsNavLink>\n    <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  </GcdsNavGroup>\n</GcdsTopNav>\n`.replace(/\\s\\snull\\n/g, \'\')',...TopNav.parameters?.docs?.source}}},Props.parameters={...Props.parameters,docs:{...Props.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-nav-group\n  menu-label="${args.menuLabel}"\n  open-trigger="${args.openTrigger}"\n  ${args.closeTrigger ? `close-trigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n</gcds-nav-group>\n\n\x3c!-- React code --\x3e\n<GcdsNavGroup\n  menuLabel="${args.menuLabel}"\n  openTrigger="${args.openTrigger}"\n  ${args.closeTrigger ? `closeTrigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n  <GcdsNavLink href="#">Nav link</GcdsNavLink>\n</GcdsNavGroup>\n`.replace(/\\s\\snull\\n/g, \'\')',...Props.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-nav-group\n  menu-label="${args.menuLabel}"\n  open-trigger="${args.openTrigger}"\n  ${args.closeTrigger ? `close-trigger="${args.closeTrigger}"` : null}\n  ${args.open ? `open` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n  <gcds-nav-link href="#">Nav link</gcds-nav-link>\n</gcds-nav-group>\n`.replace(/\\s\\snull\\n/g, \'\')',...Playground.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Open","Triggers","Menu","TopNav","Props","Playground"]},"./src/utils/storybook/component-properties.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{fd:()=>validatorProps,in:()=>eventProp,qK:()=>langProp});const langProp={lang:{control:{type:"select"},options:["en","fr"],table:{type:{summary:"string"},defaultValue:{summary:"en"}}}},validatorProps={validateOn:{name:"validate-on",control:{type:"select"},options:["blur","other"],table:{type:{summary:"string"},defaultValue:{summary:"blur"}}}},eventProp={control:{type:{}},table:{category:"Events | Événements"}}},"../../node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"../../node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var f=__webpack_require__("../../node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"../../node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("../../node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);