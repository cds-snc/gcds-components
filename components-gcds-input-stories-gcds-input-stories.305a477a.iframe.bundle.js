"use strict";(self.webpackChunk_cdssnc_gcds_components=self.webpackChunk_cdssnc_gcds_components||[]).push([[9721],{"./src/components/gcds-input/stories/gcds-input.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Autocomplete:()=>Autocomplete,Autofocus:()=>Autofocus,Default:()=>Default,Disabled:()=>Disabled,Email:()=>Email,Error:()=>Error,Form:()=>Form,Max:()=>Max,Maxlength:()=>Maxlength,Min:()=>Min,Minlength:()=>Minlength,Number:()=>Number,Password:()=>Password,Pattern:()=>Pattern,Playground:()=>Playground,Props:()=>Props,Readonly:()=>Readonly,Required:()=>Required,Search:()=>Search,Step:()=>Step,Tel:()=>Tel,Text:()=>Text,Url:()=>Url,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/utils/storybook/component-properties.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Input",parameters:{actions:{argTypesRegex:"^on.*",handles:["change","focus","blur"]}},argTypes:{hideLabel:{name:"hide-label",control:{type:"select"},options:[!1,!0],table:{type:{summary:"boolean"},defaultValue:{summary:!1}}},inputId:{name:"input-id",control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},name:{name:"name",control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},size:{control:"number",table:{type:{summary:"number"},defaultValue:{summary:"-"}}},type:{control:{type:"select"},options:["email","number","password","search","tel","text","url"],table:{type:{summary:"string"},defaultValue:{summary:"text"}}},autocomplete:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},disabled:{control:{type:"select"},options:[!1,!0],table:{type:{summary:"boolean"},defaultValue:{summary:!1}}},errorMessage:{name:"error-message",control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},hint:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},label:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},required:{control:{type:"select"},options:[!1,!0],table:{type:{summary:"boolean"},defaultValue:{summary:!1}}},value:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},autofocus:{control:{type:"select"},options:[!1,!0],table:{type:{summary:"boolean"},defaultValue:{summary:!1}}},form:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},max:{control:"text",table:{type:{summary:"number"},defaultValue:{summary:"-"}}},maxlength:{control:"text",table:{type:{summary:"number"},defaultValue:{summary:"-"}}},min:{control:"text",table:{type:{summary:"number"},defaultValue:{summary:"-"}}},minlength:{control:"text",table:{type:{summary:"number"},defaultValue:{summary:"-"}}},pattern:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},readonly:{control:{type:"select"},options:[!1,!0],table:{type:{summary:"boolean"},defaultValue:{summary:!1}}},step:{control:"text",table:{type:{summary:"number"},defaultValue:{summary:"-"}}},..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.fd,..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.qK,gcdsChange:{action:"change",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in},gcdsInput:{action:"input",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in},gcdsFocus:{action:"focus",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in},gcdsBlur:{action:"blur",..._utils_storybook_component_properties__WEBPACK_IMPORTED_MODULE_0__.in}}},Template=args=>`\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${"text"!=args.type?`type="${args.type}"`:null}\n  ${args.hint?`hint="${args.hint}"`:null}\n  ${args.errorMessage?`error-message="${args.errorMessage}"`:null}\n  ${args.required?"required":null}\n  ${args.disabled?"disabled":null}\n  ${args.form?`form="${args.value}"`:null}\n  ${args.max?`max="${args.max}"`:null}\n  ${args.maxlength?`maxlength="${args.maxlength}"`:null}\n  ${args.min?`min="${args.min}"`:null}\n  ${args.minlength?`minlength="${args.minlength}"`:null}\n  ${args.pattern?`pattern="${args.pattern}"`:null}\n  ${args.step?`step="${args.step}"`:null}\n  ${args.value?`value="${args.value}"`:null}\n  ${args.size?`size="${args.size}"`:null}\n  ${args.autocomplete?`autocomplete="${args.autocomplete}"`:null}\n  ${args.autofocus?"autofocus":null}\n  ${args.readonly?"readonly":null}\n  ${args.hideLabel?"hide-label":null}\n  ${"blur"!=args.validateOn?`validate-on="${args.validateOn}"`:null}\n  ${"en"!=args.lang?`lang="${args.lang}"`:null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${"text"!=args.type?`type="${args.type}"`:null}\n  ${args.hint?`hint="${args.hint}"`:null}\n  ${args.errorMessage?`errorMessage="${args.errorMessage}"`:null}\n  ${args.required?"required":null}\n  ${args.disabled?"disabled":null}\n  ${args.form?`form="${args.value}"`:null}\n  ${args.max?`max="${args.max}"`:null}\n  ${args.maxlength?`maxlength="${args.maxlength}"`:null}\n  ${args.min?`min="${args.min}"`:null}\n  ${args.minlength?`minlength="${args.minlength}"`:null}\n  ${args.pattern?`pattern="${args.pattern}"`:null}\n  ${args.step?`step="${args.step}"`:null}\n  ${args.value?`value="${args.value}"`:null}\n  ${args.size?`size="${args.size}"`:null}\n  ${args.autocomplete?`autocomplete="${args.autocomplete}"`:null}\n  ${args.autofocus?"autofocus":null}\n  ${args.readonly?"readonly":null}\n  ${args.hideLabel?" hideLabel":null}\n  ${"blur"!=args.validateOn?`validateOn="${args.validateOn}"`:null}\n  ${"en"!=args.lang?`lang="${args.lang}"`:null}\n>\n</GcdsInput>\n`.replace(/\s\snull\n/g,""),Default=Template.bind({});Default.args={inputId:"input-default",name:"example-default",type:"text",label:"Label",hint:"Hint / example message.",errorMessage:"",required:!1,disabled:!1,size:"",value:"",lang:"en",autocomplete:"",hideLabel:!1,validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Disabled=Template.bind({});Disabled.args={inputId:"input-disabled",name:"example-disabled",type:"text",label:"Label",hint:"Hint / example message.",disabled:!0,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Error=Template.bind({});Error.args={inputId:"input-error",name:"example-error",type:"text",label:"Label",hint:"Hint / example message.",required:!0,errorMessage:"Error message or validation message.",lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Required=Template.bind({});Required.args={inputId:"input-required",name:"example-required",type:"text",label:"Label",hint:"Hint / example message.",required:!0,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",readonly:!1};const Email=Template.bind({});Email.args={inputId:"input-email",name:"example-email",type:"email",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Number=Template.bind({});Number.args={inputId:"input-number",name:"example-number",type:"number",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",readonly:!1};const Password=Template.bind({});Password.args={inputId:"input-password",name:"example-password",type:"password",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Search=Template.bind({});Search.args={inputId:"input-search",name:"example-search",type:"search",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Tel=Template.bind({});Tel.args={inputId:"input-tel",name:"example-tel",type:"tel",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Text=Template.bind({});Text.args={inputId:"input-text",name:"example-text",type:"text",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Url=Template.bind({});Url.args={inputId:"input-url",name:"example-url",type:"url",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Autocomplete=Template.bind({});Autocomplete.args={inputId:"input-autocomplete",name:"example-autocomplete",type:"text",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"given-name",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Autofocus=Template.bind({});Autofocus.args={inputId:"input-autofocus",name:"example-autofocus",type:"text",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!0,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Form=Template.bind({});Form.args={inputId:"input-form",name:"example-form",type:"text",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"form",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Max=Template.bind({});Max.args={inputId:"input-max",name:"example-max",type:"number",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"100",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Min=Template.bind({});Min.args={inputId:"input-min",name:"example-min",type:"number",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"50",minlength:"",pattern:"",step:"",readonly:!1};const Maxlength=Template.bind({});Maxlength.args={inputId:"input-maxlength",name:"example-maxlength",type:"text",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"7",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Minlength=Template.bind({});Minlength.args={inputId:"input-minlength",name:"example-minlength",type:"text",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"5",pattern:"",step:"",readonly:!1};const Pattern=Template.bind({});Pattern.args={inputId:"input-pattern",name:"example-pattern",type:"text",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"[A-Z]+",step:"",readonly:!1};const Step=Template.bind({});Step.args={inputId:"input-step",name:"example-step",type:"number",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"10",readonly:!1};const Readonly=Template.bind({});Readonly.args={inputId:"input-readonly",name:"example-readonly",type:"number",label:"Label",hint:"Hint / example message.",disabled:!1,lang:"en",value:"Readonly",autocomplete:"",validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!0};const Props=Template.bind({});Props.args={inputId:"input-default",name:"example-default",type:"text",label:"Label",hint:"Hint / example message.",errorMessage:"",required:!1,disabled:!1,size:null,value:"",lang:"en",autocomplete:"",hideLabel:!1,validateOn:"blur",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1};const Playground=(args=>`\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${"text"!=args.type?`type="${args.type}"`:null}\n  ${args.hint?`hint="${args.hint}"`:null}\n  ${args.errorMessage?`error-message="${args.errorMessage}"`:null}\n  ${args.required?"required":null}\n  ${args.disabled?"disabled":null}\n  ${args.form?`form="${args.value}"`:null}\n  ${args.max?`max="${args.max}"`:null}\n  ${args.maxlength?`maxlength="${args.maxlength}"`:null}\n  ${args.min?`min="${args.min}"`:null}\n  ${args.minlength?`minlength="${args.minlength}"`:null}\n  ${args.pattern?`pattern="${args.pattern}"`:null}\n  ${args.step?`step="${args.step}"`:null}\n  ${args.value?`value="${args.value}"`:null}\n  ${args.size?`size="${args.size}"`:null}\n  ${args.autocomplete?`autocomplete="${args.autocomplete}"`:null}\n  ${args.autofocus?"autofocus":null}\n  ${args.readonly?"readonly":null}\n  ${args.hideLabel?"hide-label":null}\n  ${"blur"!=args.validateOn?`validate-on="${args.validateOn}"`:null}\n  ${"en"!=args.lang?`lang="${args.lang}"`:null}\n>\n</gcds-input>\n`).bind({});Playground.args={inputId:"input-playground",name:"input",type:"text",label:"Input label",hint:"",errorMessage:"",required:!1,disabled:!1,size:"",value:"",autocomplete:"",hideLabel:!1,validateOn:"blur",lang:"en",autofocus:!1,form:"",max:"",maxlength:"",min:"",minlength:"",pattern:"",step:"",readonly:!1},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Disabled.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Error.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Required.parameters?.docs?.source}}},Email.parameters={...Email.parameters,docs:{...Email.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Email.parameters?.docs?.source}}},Number.parameters={...Number.parameters,docs:{...Number.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Number.parameters?.docs?.source}}},Password.parameters={...Password.parameters,docs:{...Password.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Password.parameters?.docs?.source}}},Search.parameters={...Search.parameters,docs:{...Search.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Search.parameters?.docs?.source}}},Tel.parameters={...Tel.parameters,docs:{...Tel.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Tel.parameters?.docs?.source}}},Text.parameters={...Text.parameters,docs:{...Text.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Text.parameters?.docs?.source}}},Url.parameters={...Url.parameters,docs:{...Url.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Url.parameters?.docs?.source}}},Autocomplete.parameters={...Autocomplete.parameters,docs:{...Autocomplete.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Autocomplete.parameters?.docs?.source}}},Autofocus.parameters={...Autofocus.parameters,docs:{...Autofocus.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Autofocus.parameters?.docs?.source}}},Form.parameters={...Form.parameters,docs:{...Form.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Form.parameters?.docs?.source}}},Max.parameters={...Max.parameters,docs:{...Max.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Max.parameters?.docs?.source}}},Min.parameters={...Min.parameters,docs:{...Min.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Min.parameters?.docs?.source}}},Maxlength.parameters={...Maxlength.parameters,docs:{...Maxlength.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Maxlength.parameters?.docs?.source}}},Minlength.parameters={...Minlength.parameters,docs:{...Minlength.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Minlength.parameters?.docs?.source}}},Pattern.parameters={...Pattern.parameters,docs:{...Pattern.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Pattern.parameters?.docs?.source}}},Step.parameters={...Step.parameters,docs:{...Step.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Step.parameters?.docs?.source}}},Readonly.parameters={...Readonly.parameters,docs:{...Readonly.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Readonly.parameters?.docs?.source}}},Props.parameters={...Props.parameters,docs:{...Props.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n\n\x3c!-- React code --\x3e\n<GcdsInput\n  inputId="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `errorMessage="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? ` hideLabel` : null}\n  ${args.validateOn != \'blur\' ? `validateOn="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</GcdsInput>\n`.replace(/\\s\\snull\\n/g, \'\')',...Props.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'args => `\n<gcds-input\n  input-id="${args.inputId}"\n  label="${args.label}"\n  name="${args.name}"\n  ${args.type != \'text\' ? `type="${args.type}"` : null}\n  ${args.hint ? `hint="${args.hint}"` : null}\n  ${args.errorMessage ? `error-message="${args.errorMessage}"` : null}\n  ${args.required ? `required` : null}\n  ${args.disabled ? `disabled` : null}\n  ${args.form ? `form="${args.value}"` : null}\n  ${args.max ? `max="${args.max}"` : null}\n  ${args.maxlength ? `maxlength="${args.maxlength}"` : null}\n  ${args.min ? `min="${args.min}"` : null}\n  ${args.minlength ? `minlength="${args.minlength}"` : null}\n  ${args.pattern ? `pattern="${args.pattern}"` : null}\n  ${args.step ? `step="${args.step}"` : null}\n  ${args.value ? `value="${args.value}"` : null}\n  ${args.size ? `size="${args.size}"` : null}\n  ${args.autocomplete ? `autocomplete="${args.autocomplete}"` : null}\n  ${args.autofocus ? `autofocus` : null}\n  ${args.readonly ? `readonly` : null}\n  ${args.hideLabel ? `hide-label` : null}\n  ${args.validateOn != \'blur\' ? `validate-on="${args.validateOn}"` : null}\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-input>\n`',...Playground.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Disabled","Error","Required","Email","Number","Password","Search","Tel","Text","Url","Autocomplete","Autofocus","Form","Max","Min","Maxlength","Minlength","Pattern","Step","Readonly","Props","Playground"]},"./src/utils/storybook/component-properties.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{fd:()=>validatorProps,in:()=>eventProp,qK:()=>langProp});const langProp={lang:{control:{type:"select"},options:["en","fr"],table:{type:{summary:"string"},defaultValue:{summary:"en"}}}},validatorProps={validateOn:{name:"validate-on",control:{type:"select"},options:["blur","other"],table:{type:{summary:"string"},defaultValue:{summary:"blur"}}}},eventProp={control:{type:{}},table:{category:"Events | Événements"}}}}]);