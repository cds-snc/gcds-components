@layer reset, default, disabled, error, focus;

@layer reset {
  :host {
    display: block;

    .gcds-checkboxes__fieldset {
      border: 0;
      padding: 0;
      min-inline-size: auto;

      legend {
        padding: 0;
      }
    }

    .gcds-checkbox {
      padding: 0;

      gcds-label {
        &:before,
        &:after {
          cursor: pointer;
          content: '';
          box-sizing: border-box;
        }
      }
    }
  }
}

@layer default {
  :host .gcds-checkbox {
    position: relative;
    max-width: var(--gcds-checkbox-max-width);
    min-height: calc(
      var(--gcds-checkbox-input-height-and-width) - var(--gcds-checkbox-padding)
    );
    font: var(--gcds-checkbox-font);
    color: var(--gcds-checkbox-default-text);
    margin: var(--gcds-checkbox-margin) !important;
    padding: var(--gcds-checkbox-padding) 0 0;
    transition: color ease-in-out 0.15s;

    :is(gcds-label, gcds-hint, gcds-error-message) {
      padding: var(--gcds-checkbox-label-padding) !important;
    }

    gcds-hint::part(hint) {
      margin: 0;
    }

    input,
    gcds-label:before,
    gcds-label:after {
      position: absolute;
    }

    input,
    gcds-label:before {
      top: 0;
      left: 0;
      width: var(--gcds-checkbox-input-height-and-width);
      height: var(--gcds-checkbox-input-height-and-width);
    }

    input {
      opacity: 0;
    }

    gcds-label {
      width: fit-content;

      &:before {
        border: var(--gcds-checkbox-input-border-width) solid currentcolor;
        border-radius: var(--gcds-checkbox-input-border-radius);
        transition:
          border-color ease-in-out 0.15s,
          box-shadow ease-in-out 0.15s,
          outline ease-in-out 0.15s;
      }

      &:after {
        border: var(--gcds-checkbox-check-border-width) solid currentcolor;
        border-inline-start: 0 !important;
        border-block-start: 0 !important;
        height: var(--gcds-checkbox-check-height);
        width: var(--gcds-checkbox-check-width);
        left: var(--gcds-checkbox-check-left);
        opacity: 0;
        top: var(--gcds-checkbox-check-top);
        transform: rotate(40deg);
        transition: opacity 0.2s ease-in-out;
      }
    }

    input:checked + gcds-label:after {
      opacity: 1;
    }
  }
}

@layer disabled {
  :host .gcds-checkbox.gcds-checkbox--disabled {
    color: var(--gcds-checkbox-disabled-text);

    gcds-label {
      --gcds-label-text: currentColor;

      &:before,
      &:after {
        cursor: not-allowed;
      }

      &:before {
        border-color: currentcolor;
        background-color: var(--gcds-checkbox-disabled-background);
      }
    }

    gcds-hint {
      --gcds-hint-text: currentColor;
    }
  }
}

@layer error {
  :host .gcds-checkbox.gcds-checkbox--error:not(:focus-within) gcds-label {
    &:before {
      border-color: var(--gcds-checkbox-danger-border);
    }

    &:after {
      color: var(--gcds-checkbox-danger-border);
    }
  }
}

@layer focus {
  :host .gcds-checkbox:focus-within {
    color: var(--gcds-checkbox-focus-color);

    input:focus + gcds-label:before {
      outline: var(--gcds-checkbox-focus-outline-width) solid currentcolor;
      outline-offset: var(--gcds-checkbox-input-border-width);
      box-shadow: var(--gcds-checkbox-focus-box-shadow);
      background: var(--gcds-checkbox-focus-background);
    }
  }
}
